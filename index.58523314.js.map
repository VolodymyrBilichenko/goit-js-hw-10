{"mappings":"AAEA,MAEMA,EAAU,CACZC,QAAS,CACL,YAJW,0EAmBnB,SAASC,EAAgBC,GAEL,OAATC,MADW,gEAAgED,IAC1DH,GACVK,MAAPC,IACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,MAAM,G,CCzB9B,MAAMC,EAAO,CACTC,UAAWC,SAASC,cAAc,iBAClCC,YAAaF,SAASC,cAAc,WACpCE,SAAUH,SAASC,cAAc,UACjCG,QAASJ,SAASC,cAAc,cAEpCH,EAAKC,UAAUM,iBAAiB,UAsBhC,WAGIhB,EAFgBiB,KAAKC,OAGhBf,MAAMgB,IACH,MAAMC,EASlB,SAAoBD,GAChB,OAAOA,EAAWE,KAAI,EAACC,IAACA,EAAKC,SAASC,KAACA,EAAIC,YAAEA,EAAWC,YAAEA,OAC/C,oGAGOF,kDACmBC,iDACAC,+GAIbJ,4DAGrBK,KAAK,G,CAvBmBC,CAAWT,GACMV,EAA/BM,QAAQc,UAAYT,CAAU,IAEtCU,OAAMC,IAEqB,MADxBC,QAAQC,IAAIF,GACNA,CAAK,G,ID7BZ7B,MADK,+CACMJ,GACJK,MAAPC,IACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,MAAM,ICLzBL,MAAK+B,KASV,SAAuBA,GACnBA,EAAUC,SAASC,IACf,MAAMC,EAAW1B,SAAS2B,cAAc,UAEGD,EAAlCnB,MAAQkB,EAAGG,GACpBF,EAASG,YAAcJ,EAAGZ,KAC1Bf,EAAKC,UAAU+B,OAAOJ,EAAS,G,CAd/BK,CAAcR,GACgCF,QAAtCC,IAAIC,EAAU,IAEzBJ,OAAMC,IAEqB,MADxBC,QAAQC,IAAIF,GACNA,CAAK","sources":["src/js/cat-api.js","src/index.js"],"sourcesContent":["export { fetchBreeds,  fetchCatByBreed};\n\nconst MY_API_KEY = 'live_SQaMb78X6e2HQyuWGiJMLYhVdCF2JW3TGjBlkUxwJK4JNYYlgKyqgOiHyaGe8Mw7';\n    \nconst options = {\n    headers: {\n        'x-api-key': MY_API_KEY,\n    }\n};\n\nfunction fetchBreeds() { // виконує HTTP-запит і повертає проміс із масивом порід\n    const url = `https://api.thecatapi.com/v1/breeds?limit=10`; // даю ключ до сервера  \n    return fetch(url, options) // повертає запит \n    .then((response) => { // повернення промісу (перший запит на сервер)\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        return response.json()   \n    })\n}\n\nfunction fetchCatByBreed(breedId) { // робить HTTP-запит і повертає проміс із даними про кота\n    const urlInfCat = `https://api.thecatapi.com/v1/images/search?limit=1&breed_ids=${breedId}`; // даю ключ до сервера  \n    return fetch(urlInfCat, options) // повертає запит \n    .then((response) => { // повернення промісу (перший запит на сервер)\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        return response.json()   \n    })\n}","import { fetchBreeds, fetchCatByBreed } from \"./js/cat-api\";\nimport './sass/index.scss';\n\nconst refs = {\n    selectInp: document.querySelector('.breed-select'),\n    loadingData: document.querySelector('.loader'),\n    errorMes: document.querySelector('.error'),\n    infoCat: document.querySelector('.cat-info'),\n};\nrefs.selectInp.addEventListener('change', onChangeCat)\n\nfetchBreeds()\n    .then(serverInf => {\n        serverInfCats(serverInf); // посилання на фун-ю яка робить перебор обьєкта з сервера\n        console.log(serverInf); // виводить весь обьєкт информації з сервера\n    })\n    .catch(error => {\n        console.log(error); // логуємо помилку вот сервера \n        throw error; // throw !!! читати\n    })\n\nfunction serverInfCats(serverInf) { // фун-я для перебору об'єкта і виділення по значенням  \n    serverInf.forEach((el) => {\n        const servCats = document.createElement('option'); // змінна для зберігання значень перебраного об'єкта\n\n        servCats.value = el.id;\n        servCats.textContent = el.name;\n        refs.selectInp.append(servCats);\n    });\n}\n\nfunction onChangeCat() { // фун-я для вибору кота з сервера по параметрам (запуска'ється за допомогою fetchCatByBreed())\n    const breedId = this.value;\n    \n    fetchCatByBreed(breedId)\n        .then((servOneCat) => {\n            const catContent = cardForCat(servOneCat); // виводить весь обьєкт інформації з сервера\n            refs.infoCat.innerHTML = catContent; // закидую контент картки в контейнер для користувача\n        })\n        .catch(error => {\n            console.log(error); // логуємо помилку вот сервера \n            throw error; // throw !!! почитать\n        })\n}\n\nfunction cardForCat(servOneCat) {\n    return servOneCat.map(({url, breeds: [{name, temperament, description}]}) => {\n        return `\n        <div id=\"container\">\t\n            <div class=\"product-details\">\n                <h1>${name}</h1>\n                <p class=\"information\">${temperament}</p>\n                <p class=\"information\">${description}</p>\n            </div>\n            \n            <div class=\"product-image\">\n                <img src=\"${url}\" alt=\"cat photo\">\n            </div>\n        </div>`\n    }).join('');\n}\n\n\n\n\n"],"names":["$c4ebbd28ee7007ee$var$options","headers","$c4ebbd28ee7007ee$export$57b7d3a597416aa2","breedId","fetch","then","response","ok","Error","status","json","$1f0dc3b9307be026$var$refs","selectInp","document","querySelector","loadingData","errorMes","infoCat","addEventListener","this","value","servOneCat","catContent","map","url","breeds","name","temperament","description","join","$1f0dc3b9307be026$var$cardForCat","innerHTML","catch","error","console","log","serverInf","forEach","el","servCats","createElement","id","textContent","append","$1f0dc3b9307be026$var$serverInfCats"],"version":3,"file":"index.58523314.js.map"}